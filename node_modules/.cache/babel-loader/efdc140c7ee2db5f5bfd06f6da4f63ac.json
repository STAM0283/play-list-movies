{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js\";\nimport axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\nimport Filter from \"./Filter\";\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"\");\n  const [query, setquery] = useState(\"\");\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  const categieries = \"movie\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/discover/${categieries}?&api_key=721e6d30945061e57c30f65c44877cf8?query=${query}`).then(response => {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    });\n  }, []);\n  return movies !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, movies.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      ariaHideApp: false,\n      style: {\n        content: {\n          backgroundColor: \"black\",\n          color: \"wheat\",\n          width: \"80%\",\n          textAlign: \"center\",\n          fontSize: \"x-large\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          border: \"solid 1px black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, item.overview), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${image}/${item.backdrop_path}`,\n      alt: \"picture movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, item.original_title || item.original_name), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${image}/${item.poster_path}`,\n      alt: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Infos++\"));\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Pas de data\");\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js"],"names":["axios","Modal","React","useEffect","useState","Filter","MovieList","movies","setMovies","modalIsOpen","setModalIsOpen","categories","setCategories","query","setquery","image","categieries","get","then","response","console","log","data","results","map","item","content","backgroundColor","color","width","textAlign","fontSize","position","left","top","transform","border","overview","backdrop_path","id","original_title","original_name","poster_path"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\nimport Filter from \"./Filter\"; \n\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"\"); \n  const [query, setquery] = useState(\"\"); \n\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  const categieries = \"movie\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/discover/${categieries}?&api_key=721e6d30945061e57c30f65c44877cf8?query=${query}`)\n      .then(response => {\n        console.log(response.data.results);\n        setMovies(response.data.results);\n      })\n  }, [])\n  return movies !== null ? ( \n    <div className=\"movie_list\">\n        <Filter />\n      <ul>\n        {\n          movies.map((item) => {\n            return (\n              <div className=\"posts\">\n                <Modal isOpen={modalIsOpen}\n                  ariaHideApp={false}\n                  style={{\n                    content: {\n                      backgroundColor: \"black\",\n                      color: \"wheat\",\n                      width: \"80%\",\n                      textAlign: \"center\",\n                      fontSize: \"x-large\",\n                      position: \"absolute\",\n                      left: \"50%\",\n                      top: \"50%\",\n                      transform: \"translate(-50%, -50%)\",\n                      border: \"solid 1px black\",\n                    },\n                  }}>\n                  <p>{item.overview}</p>\n                  <img src={`${image}/${item.backdrop_path}`} alt=\"picture movies\" />\n\n                </Modal>\n                <h1 key={item.id}>{item.original_title || item.original_name}</h1>\n                <img src={`${image}/${item.poster_path}`} alt=\"picture\" />\n                <button onClick={() => setModalIsOpen(true)}>Infos++</button>\n              </div>\n\n            )\n          })\n        }\n      </ul>\n\n    </div>\n  ) : (\n      <p>Pas de data</p>\n    )\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js\";\nimport axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\nimport coming_soon from \"../media/coming_soon.png\";\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"movie\");\n  const [types, setTypes] = useState(\"discover\");\n  const [language, setLanguage] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"popularity\");\n  const [includeAdult, setIncludeAdult] = useState(false);\n  const [includeVideo, setIncludeVideo] = useState(false);\n  const [page, setPage] = useState(1);\n  console.log(page);\n  const [genre, setGenre] = useState(\"\");\n  const [year, setyear] = useState(2020);\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/${types}/${categories}?&api_key=721e6d30945061e57c30f65c44877cf8&with_genres=${genre}&primary_release_year=${year}&language=${language}&sort_by=${sortBy}&include_adult=${includeAdult}&include_video=${includeVideo}&page=${page}`).then(response => {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    });\n  }, [page, categories, genre]);\n  return movies !== null && categories !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"filtrer par type\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"movie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"movie\",\n    name: \"1\",\n    onClick: () => setCategories(\"movie\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"T\\xE9livision\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"tv\",\n    name: \"1\",\n    onClick: () => setCategories(\"tv\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Chercher des films par cat\\xE9gories\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"action\",\n    name: \"1\",\n    onClick: () => setGenre(28) + setPage(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"adventure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Aventure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"adventure\",\n    name: \"1\",\n    onClick: () => setGenre(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setPage(page !== 0 && page < 31 ? page - 1 : 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Page pr\\xE9c\\xE9dente\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setPage(page !== 0 && page < 31 ? page + 1 : 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Page Suivante\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, movies.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, item.original_title || item.original_name), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.poster_path ? `${image}/${item.poster_path}` : coming_soon,\n      alt: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, item.release_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Moyenne des vote: \", item.vote_average !== 0 ? item.vote_average + \"/\" + \"10\" : \"Non renseignÃ©\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Infos++\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      ariaHideApp: false,\n      style: {\n        content: {\n          backgroundColor: \"black\",\n          color: \"wheat\",\n          width: \"80%\",\n          textAlign: \"center\",\n          fontSize: \"x-large\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          border: \"solid 1px black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, item.overview), /*#__PURE__*/React.createElement(\"img\", {\n      id: item.id,\n      src: `${image}/${item.backdrop_path}`,\n      alt: \"picture movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    })));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Faites une autre recherche\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"movie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"movie\",\n    name: \"1\",\n    onClick: () => setCategories(\"movie\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"T\\xE9livision\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"tv\",\n    name: \"1\",\n    onClick: () => setCategories(\"tv\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"movie\",\n    name: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js"],"names":["axios","Modal","React","useEffect","useState","coming_soon","MovieList","movies","setMovies","modalIsOpen","setModalIsOpen","categories","setCategories","types","setTypes","language","setLanguage","sortBy","setSortBy","includeAdult","setIncludeAdult","includeVideo","setIncludeVideo","page","setPage","console","log","genre","setGenre","year","setyear","image","get","then","response","data","results","map","item","id","original_title","original_name","poster_path","release_date","vote_average","content","backgroundColor","color","width","textAlign","fontSize","position","left","top","transform","border","overview","backdrop_path"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\nimport coming_soon from \"../media/coming_soon.png\";\n\n\nfunction MovieList() {\n  \n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"movie\");\n  const [types, setTypes] = useState(\"discover\");\n  const [language, setLanguage] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"popularity\");\n  const [includeAdult, setIncludeAdult] = useState(false);\n  const [includeVideo, setIncludeVideo] = useState(false);\n  const [page, setPage] = useState(1); \n  console.log(page)\n  const [genre, setGenre] = useState(\"\");\n  const [year, setyear] = useState(2020);\n\n\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/${types}/${categories}?&api_key=721e6d30945061e57c30f65c44877cf8&with_genres=${genre}&primary_release_year=${year}&language=${language}&sort_by=${sortBy}&include_adult=${includeAdult}&include_video=${includeVideo}&page=${page}`)\n      .then(response => {\n        console.log(response.data.results);\n        setMovies(response.data.results);\n      })\n  }, [page,categories, genre])\n  \n\n  return movies !== null && categories !== null ? (\n    <div className=\"movie_list\">\n      <div className=\"filter\">\n        <h1>Filter</h1>\n        <p>filtrer par type</p>\n        <label htmlFor=\"movie\">Films</label>\n        <input type=\"radio\" id=\"movie\" name=\"1\" onClick={()=>setCategories(\"movie\")}/>\n        <label htmlFor=\"tv\">TÃ©livision</label>\n        <input type=\"radio\" id=\"tv\" name=\"1\"onClick={()=>setCategories(\"tv\")}/>\n        <p>Chercher des films par catÃ©gories</p>\n        <label htmlFor=\"action\">Action</label>\n        <input type=\"radio\" id=\"action\" name=\"1\"onClick={()=>setGenre(28) + setPage(1)}/>\n        <label htmlFor=\"adventure\">Aventure</label>\n        <input type=\"radio\" id=\"adventure\" name=\"1\"onClick={()=>setGenre(12)}/>\n      </div>\n      <div>\n        <button type=\"button\" onClick={() => setPage(page !== 0 && page < 31 ? page - 1 : 1)}>Page prÃ©cÃ©dente</button>\n        <button type=\"button\" onClick={() => setPage(page !== 0 && page < 31 ? page + 1 : 1)} >Page Suivante</button>\n      </div>\n      <ul>\n        {\n          movies.map((item) => {\n            return (\n              <div className=\"posts\">\n              \n                <h1 key={item.id}>{item.original_title || item.original_name}</h1>\n                <img src={item.poster_path ? `${image}/${item.poster_path}`: coming_soon} alt=\"picture\" />\n                <p>{item.release_date}</p>\n                <p>Moyenne des vote: {item.vote_average !== 0 ? item.vote_average + \"/\" + \"10\" : \"Non renseignÃ©\"}</p>\n                <button onClick={() => setModalIsOpen(true)}>Infos++</button>\n                <Modal isOpen={modalIsOpen}\n                  ariaHideApp={false}\n                  style={{\n                    content: {\n                      backgroundColor: \"black\",\n                      color: \"wheat\",\n                      width: \"80%\",\n                      textAlign: \"center\",\n                      fontSize: \"x-large\",\n                      position: \"absolute\",\n                      left: \"50%\",\n                      top: \"50%\",\n                      transform: \"translate(-50%, -50%)\",\n                      border: \"solid 1px black\",\n                    },\n                  }}>\n                  <p id = {item.id}>{item.overview}</p>\n                  <img id = {item.id} src={`${image}/${item.backdrop_path}`} alt=\"picture movies\" />\n\n                </Modal>\n              </div>\n\n            )\n          })\n        }\n      </ul>\n\n    </div>\n  ) : (\n      <div className=\"filter\">\n        <p>Faites une autre recherche</p>\n        <h1>Filter</h1>\n        <label htmlFor=\"movie\">Films</label>\n        <input type=\"radio\" id=\"movie\" name=\"1\" onClick={()=>setCategories(\"movie\")}/>\n        <label htmlFor=\"tv\">TÃ©livision</label>\n        <input type=\"radio\" id=\"tv\" name=\"1\"onClick={()=>setCategories(\"tv\")}/>\n        <input type=\"radio\" id=\"movie\" name=\"1\"/>\n      </div>\n    )\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}
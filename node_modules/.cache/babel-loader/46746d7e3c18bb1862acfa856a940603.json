{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js\";\nimport axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"movie\");\n  const [query, setQuery] = useState(\"\");\n  const [types, setTypes] = useState(\"discover\");\n  const [language, setLanguage] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"popularity\");\n  const [includeAdult, setIncludeAdult] = useState(false);\n  const [includeVideo, setIncludeVideo] = useState(false);\n  const [page, setPage] = useState(\"\");\n  console.log(page);\n  const [genre, setGenre] = useState(\"\");\n  const [year, setyear] = useState(2020);\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/${types}/${categories}?&api_key=721e6d30945061e57c30f65c44877cf8&with_genres=${genre}&primary_release_year=${year}&language=${language}&sort_by=${sortBy}&include_adult=${includeAdult}&include_video=${includeVideo}&page=${page}&query=${query}`).then(response => {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    });\n  }, []); //https://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\n\n  return movies !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"filtrer par type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"movie\",\n    name: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"tv\",\n    name: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"movie\",\n    name: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Mots-cl\\xE9s \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    id: \"keyword\",\n    type: \"search\",\n    placeholder: \"Filtrer par mots-cl\\xE9s\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setPage(page - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Page pr\\xE9c\\xE9dente\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setPage(page + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Page Suivante\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, movies.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      ariaHideApp: false,\n      style: {\n        content: {\n          backgroundColor: \"black\",\n          color: \"wheat\",\n          width: \"80%\",\n          textAlign: \"center\",\n          fontSize: \"x-large\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          border: \"solid 1px black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, item.overview), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${image}/${item.backdrop_path}`,\n      alt: \"picture movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, item.original_title || item.original_name), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${image}/${item.poster_path}`,\n      alt: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, item.release_date), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Infos++\"));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Faites une autre recherche\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Mots-cl\\xE9s \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    id: \"keyword\",\n    type: \"search\",\n    placeholder: \"Filtrer par mots-cl\\xE9s\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/net-movie/src/components/MovieList.js"],"names":["axios","Modal","React","useEffect","useState","MovieList","movies","setMovies","modalIsOpen","setModalIsOpen","categories","setCategories","query","setQuery","types","setTypes","language","setLanguage","sortBy","setSortBy","includeAdult","setIncludeAdult","includeVideo","setIncludeVideo","page","setPage","console","log","genre","setGenre","year","setyear","image","get","then","response","data","results","e","target","value","map","item","content","backgroundColor","color","width","textAlign","fontSize","position","left","top","transform","border","overview","backdrop_path","id","original_title","original_name","poster_path","release_date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,UAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,YAAD,CAApC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,IAAD,CAAhC;AAGA,MAAI4B,KAAK,GAAG,iCAAZ;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACiC,GAAN,CAAW,gCAA+BnB,KAAM,IAAGJ,UAAW,0DAAyDkB,KAAM,yBAAwBE,IAAK,aAAYd,QAAS,YAAWE,MAAO,kBAAiBE,YAAa,kBAAiBE,YAAa,SAAQE,IAAK,UAASZ,KAAM,EAAzR,EACGsB,IADH,CACQC,QAAQ,IAAI;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACA9B,MAAAA,SAAS,CAAC4B,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAT;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CAjBmB,CAwBrB;;AAEE,SAAO/B,MAAM,KAAK,IAAX,gBACL;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,IAAvB;AAA4B,IAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,IAAI,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAO,IAAA,KAAK,EAAEM,KAAd;AAAqB,IAAA,EAAE,EAAC,SAAxB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,WAAW,EAAC,0BAA5D;AACA,IAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMf,OAAO,CAACD,IAAI,GAAG,CAAR,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACD,IAAI,GAAG,CAAR,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIlB,MAAM,CAACmC,GAAP,CAAYC,IAAD,IAAU;AACnB,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAElC,WAAf;AACE,MAAA,WAAW,EAAE,KADf;AAEE,MAAA,KAAK,EAAE;AACLmC,QAAAA,OAAO,EAAE;AACPC,UAAAA,eAAe,EAAE,OADV;AAEPC,UAAAA,KAAK,EAAE,OAFA;AAGPC,UAAAA,KAAK,EAAE,KAHA;AAIPC,UAAAA,SAAS,EAAE,QAJJ;AAKPC,UAAAA,QAAQ,EAAE,SALH;AAMPC,UAAAA,QAAQ,EAAE,UANH;AAOPC,UAAAA,IAAI,EAAE,KAPC;AAQPC,UAAAA,GAAG,EAAE,KARE;AASPC,UAAAA,SAAS,EAAE,uBATJ;AAUPC,UAAAA,MAAM,EAAE;AAVD;AADJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIX,IAAI,CAACY,QAAT,CAhBF,eAiBE;AAAK,MAAA,GAAG,EAAG,GAAEtB,KAAM,IAAGU,IAAI,CAACa,aAAc,EAAzC;AAA4C,MAAA,GAAG,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF,eAqBE;AAAI,MAAA,GAAG,EAAEb,IAAI,CAACc,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBd,IAAI,CAACe,cAAL,IAAuBf,IAAI,CAACgB,aAA/C,CArBF,eAsBE;AAAK,MAAA,GAAG,EAAG,GAAE1B,KAAM,IAAGU,IAAI,CAACiB,WAAY,EAAvC;AAA0C,MAAA,GAAG,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjB,IAAI,CAACkB,YAAT,CAvBF,eAwBE;AAAQ,MAAA,OAAO,EAAE,MAAMnD,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBF,CADF;AA6BD,GA9BD,CAFJ,CAfF,CADK,gBAsDH;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE;AAAO,IAAA,KAAK,EAAEG,KAAd;AAAqB,IAAA,EAAE,EAAC,SAAxB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,WAAW,EAAC,0BAA5D;AAAoF,IAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAtDJ;AA6DD;;AAED,eAAenC,SAAf","sourcesContent":["import axios from 'axios';\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from 'react';\n\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [categories, setCategories] = useState(\"movie\");\n  const [query, setQuery] = useState(\"\");\n  const [types, setTypes] = useState(\"discover\");\n  const [language, setLanguage] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"popularity\");\n  const [includeAdult, setIncludeAdult] = useState(false);\n  const [includeVideo, setIncludeVideo] = useState(false);\n  const [page, setPage] = useState(\"\"); \n  console.log(page)\n  const [genre, setGenre] = useState(\"\");\n  const [year, setyear] = useState(2020) \n\n\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/${types}/${categories}?&api_key=721e6d30945061e57c30f65c44877cf8&with_genres=${genre}&primary_release_year=${year}&language=${language}&sort_by=${sortBy}&include_adult=${includeAdult}&include_video=${includeVideo}&page=${page}&query=${query}`)\n      .then(response => {\n        console.log(response.data.results);\n        setMovies(response.data.results);\n      })\n  }, [])\n//https://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\n\n  return movies !== null ? (\n    <div className=\"movie_list\">\n      <div className=\"filter\">\n        <h1>Filter</h1>\n        <p>filtrer par type</p>\n        <input type=\"radio\" id=\"movie\" name=\"1\" />\n        <input type=\"radio\" id=\"tv\" name=\"1\"/>\n        <input type=\"radio\" id=\"movie\" name=\"1\"/>\n        <label htmlFor=\"keyword\">Mots-clés </label>\n        <input value={query} id=\"keyword\" type=\"search\" placeholder=\"Filtrer par mots-clés\" \n        onChange={(e) => setQuery(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"button\" onClick={() => setPage(page - 1)}>Page précédente</button>\n        <button type=\"button\" onClick={() => setPage(page + 1)} >Page Suivante</button>\n      </div>\n      <ul>\n        {\n          movies.map((item) => {\n            return (\n              <div className=\"posts\">\n                <Modal isOpen={modalIsOpen}\n                  ariaHideApp={false}\n                  style={{\n                    content: {\n                      backgroundColor: \"black\",\n                      color: \"wheat\",\n                      width: \"80%\",\n                      textAlign: \"center\",\n                      fontSize: \"x-large\",\n                      position: \"absolute\",\n                      left: \"50%\",\n                      top: \"50%\",\n                      transform: \"translate(-50%, -50%)\",\n                      border: \"solid 1px black\",\n                    },\n                  }}>\n                  <p>{item.overview}</p>\n                  <img src={`${image}/${item.backdrop_path}`} alt=\"picture movies\" />\n\n                </Modal>\n                <h1 key={item.id}>{item.original_title || item.original_name}</h1>\n                <img src={`${image}/${item.poster_path}`} alt=\"picture\" />\n                <p>{item.release_date}</p>\n                <button onClick={() => setModalIsOpen(true)}>Infos++</button>\n              </div>\n\n            )\n          })\n        }\n      </ul>\n\n    </div>\n  ) : (\n      <div className=\"filter\">\n        <p>Faites une autre recherche</p>\n        <h1>Filter</h1>\n        <label htmlFor=\"keyword\">Mots-clés </label>\n        <input value={query} id=\"keyword\" type=\"search\" placeholder=\"Filtrer par mots-clés\" onChange={(e) => setQuery(e.target.value)} />\n      </div>\n    )\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/net-movie/src/components/Search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Search = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [query, setQuery] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/search/movie?&api_key=721e6d30945061e57c30f65c44877cf8&query=${query}\").then(response => {\n      console.log(\"mes films2\", response.data.results);\n      setSearchMovies(response.data.results);\n    });\n  });\n  return searchMovies !== null & query !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Mots-cl\\xE9s \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    id: \"keyword\",\n    type: \"search\",\n    placeholder: \"Filtrer par mots-cl\\xE9s\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), searchMovies.map(item => {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, item.original_title || item.original_name), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${image}/${item.poster_path}`,\n      alt: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, item.release_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, \"Moyenne des vote: \", item.vote_average !== 0 ? item.vote_average + \"/\" + \"10\" : \"Non renseigné\"));\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Pas de data\");\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/net-movie/src/components/Search.jsx"],"names":["React","useState","useEffect","axios","Search","searchMovies","setSearchMovies","query","setQuery","get","then","response","console","log","data","results","e","target","value","map","item","id","original_title","original_name","image","poster_path","release_date","vote_average"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACM,GAAN,CAAU,oGAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACG,IAAT,CAAcC,OAAxC;AACAT,MAAAA,eAAe,CAACK,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAf;AACH,KAJL;AAMH,GAPQ,CAAT;AAQA,SAAOV,YAAY,KAAK,IAAjB,GAAwBE,KAAK,KAAK,IAAlC,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,EAAE,EAAC,SAAxB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,WAAW,EAAC,0BAA5D;AACI,IAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKQb,YAAY,CAACc,GAAb,CAAkBC,IAAD,IAAU;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,cAAL,IAAuBF,IAAI,CAACG,aAA/C,CADJ,eAEI;AAAK,MAAA,GAAG,EAAG,GAAEC,KAAM,IAAGJ,IAAI,CAACK,WAAY,EAAvC;AAA0C,MAAA,GAAG,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIL,IAAI,CAACM,YAAT,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBN,IAAI,CAACO,YAAL,KAAsB,CAAtB,GAA0BP,IAAI,CAACO,YAAL,GAAoB,GAApB,GAA0B,IAApD,GAA2D,eAAjF,CAJJ;AAMH,GAPD,CALR,CADG,gBAkBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBR;AAoBH,CA/BD;;AAiCA,eAAevB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Search = () => {\n    const [searchMovies, setSearchMovies] = useState(null);\n    const [query, setQuery] = useState(null);\n    useEffect(() => {\n        axios.get(\"https://api.themoviedb.org/3/search/movie?&api_key=721e6d30945061e57c30f65c44877cf8&query=${query}\")\n            .then((response) => {\n                console.log(\"mes films2\", response.data.results);\n                setSearchMovies(response.data.results);\n            })\n\n    })\n    return searchMovies !== null & query !== null ? (\n        <div>\n            <label htmlFor=\"keyword\">Mots-clés </label>\n            <input value={query} id=\"keyword\" type=\"search\" placeholder=\"Filtrer par mots-clés\"\n                onChange={(e) => setQuery(e.target.value)} />\n            {\n                searchMovies.map((item) => {\n                    <div>\n                        <h1 key={item.id}>{item.original_title || item.original_name}</h1>\n                        <img src={`${image}/${item.poster_path}`} alt=\"picture\" />\n                        <p>{item.release_date}</p>\n                        <p>Moyenne des vote: {item.vote_average !== 0 ? item.vote_average + \"/\" + \"10\" : \"Non renseigné\"}</p>\n                    </div>\n                })\n            }\n\n        </div>\n    ) : (\n            <p>Pas de data</p>\n        )\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}
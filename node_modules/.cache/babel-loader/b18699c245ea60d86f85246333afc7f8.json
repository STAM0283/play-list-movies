{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/net-movie/src/components/Search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport coming_soon from \"../media/coming_soon.png\";\nimport full_screen from \"../media/full_screen.png\";\nimport deletes from \"../media/deletes.png\";\n\nconst Search = () => {\n  let image = \"https://image.tmdb.org/t/p/w400\";\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/search/movie?&api_key=${process.env.REACT_APP_API_KEY}&query=${query}`).then(response => {\n      setSearchMovies(response.data.results);\n    });\n  }, [query]);\n\n  const deleteMovie = e => {\n    let id = parseInt(e.target.id);\n    setSearchMovies(prevState => prevState.filter(movie => movie.id !== id));\n  };\n\n  const zoomPicture = e => {\n    let id = parseInt(e.target.id);\n    setSearchMovies(prevState => prevState.filter(movie => movie.id === id));\n  };\n\n  return searchMovies !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Mots-cl\\xE9s \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    id: \"keyword\",\n    type: \"search\",\n    placeholder: \"Filtrer par mots-cl\\xE9s\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchMovie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, searchMovies.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, item.original_title || item.original_name), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.poster_path ? `${image}${item.poster_path}` : coming_soon,\n      alt: \"picture_movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, item.release_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, \"Moyenne des vote: \", item.vote_average !== 0 ? `${item.vote_average}/10` : \"Non renseignÃ©\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgDelete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: item.id,\n      style: {\n        width: \"40px\",\n        cursor: \"pointer\"\n      },\n      src: deletes,\n      alt: \"icone delete\",\n      onClick: deleteMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      id: item.id,\n      style: {\n        width: \"40px\",\n        cursor: \"pointer\"\n      },\n      src: full_screen,\n      alt: \"zoomPicture\",\n      onClick: zoomPicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    })));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Mots-cl\\xE9s \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    id: \"keyword\",\n    type: \"search\",\n    placeholder: \"Filtrer par mots-cl\\xE9s\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/net-movie/src/components/Search.jsx"],"names":["React","useState","useEffect","axios","coming_soon","full_screen","deletes","Search","image","searchMovies","setSearchMovies","query","setQuery","get","process","env","REACT_APP_API_KEY","then","response","data","results","deleteMovie","e","id","parseInt","target","prevState","filter","movie","zoomPicture","value","map","item","original_title","original_name","poster_path","release_date","vote_average","width","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport coming_soon from \"../media/coming_soon.png\";\nimport full_screen from \"../media/full_screen.png\";\nimport deletes from \"../media/deletes.png\";\n\nconst Search = () => {\n    let image = \"https://image.tmdb.org/t/p/w400\";\n    const [searchMovies, setSearchMovies] = useState(null);\n    const [query, setQuery] = useState(\"\");\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/search/movie?&api_key=${process.env.REACT_APP_API_KEY}&query=${query}`)\n            .then((response) => {\n                setSearchMovies(response.data.results);\n            })\n\n    }, [query])\n\n    const deleteMovie = (e) => {\n        let id = parseInt(e.target.id);\n        setSearchMovies((prevState) => prevState.filter((movie) => movie.id !== id));\n    };\n    const zoomPicture = (e) => {\n        let id = parseInt(e.target.id);\n        setSearchMovies((prevState) => prevState.filter((movie) => movie.id === id));\n\n\n    }\n    return searchMovies !== null ? (\n        <div className=\"search\">\n            <label htmlFor=\"keyword\">Mots-clÃ©s </label>\n            <input value={query} id=\"keyword\" type=\"search\" placeholder=\"Filtrer par mots-clÃ©s\"\n                onChange={(e) => setQuery(e.target.value)} />\n\n            <div id=\"searchMovie\">\n                {\n                    searchMovies.map((item) => {\n                        return (\n                            <div>\n                                <div>\n                                    <h1>{item.original_title || item.original_name}</h1>\n                                    <img src={item.poster_path ? `${image}${item.poster_path}` : coming_soon} alt=\"picture_movie\" />\n                                    <p>{item.release_date}</p>\n                                    <p>Moyenne des vote: {item.vote_average !== 0 ? `${item.vote_average}/10` : \"Non renseignÃ©\"}</p>\n                                </div>\n                                < div className=\"imgDelete\">\n                                    <img id={item.id} style={{ width: \"40px\", cursor: \"pointer\" }} src={deletes} alt=\"icone delete\" onClick={deleteMovie} />\n                                    <img id={item.id} style={{ width: \"40px\", cursor: \"pointer\" }} src={full_screen} alt=\"zoomPicture\" onClick={zoomPicture} />\n                                </div>\n                            </div>\n\n                        )\n\n                    })\n                }\n            </div>\n\n        </div>\n    ) : (\n            <div className=\"search\">\n                <label htmlFor=\"keyword\">Mots-clÃ©s </label>\n                <input value={query} id=\"keyword\" type=\"search\" placeholder=\"Filtrer par mots-clÃ©s\"\n                    onChange={(e) => setQuery(e.target.value)} />\n            </div>\n        )\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}